{"version":3,"sources":["logo.svg","SortingAlgorithms/SortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIndex","endIndex","middleIndex","Math","floor","k","i","j","push","mergeStep","MAIN_COLOR","COMPARE_COLOR","SortingVisualizer","props","state","this","resetArray","min","max","random","setState","arrayBars","document","getElementsByClassName","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","n","temp","getBubbleSortAnimations","barOneNewHeight","barTwoNewHeight","className","map","value","idx","onClick","mergeSort","bubbleSort","quickSort","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cfa2fb97.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export function getMergeSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) {\n        return array;\n    }    \n    const auxiliaryArray = array.slice();\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n    return animations;\n}\n\n\nfunction mergeSortHelper(\n    mainArray,\n    startIndex,\n    endIndex,\n    auxiliaryArray,\n    animations,\n) {\n    if (startIndex === endIndex) {\n        return;\n    }\n\n    const middleIndex = Math.floor((startIndex + endIndex) / 2);\n\n    mergeSortHelper(auxiliaryArray, startIndex, middleIndex, mainArray, animations);\n    mergeSortHelper(auxiliaryArray, middleIndex + 1, endIndex, mainArray, animations);\n    mergeStep(mainArray, startIndex, middleIndex, endIndex, auxiliaryArray, animations);\n}\n\n\nfunction mergeStep(\n    mainArray,\n    startIndex,\n    middleIndex,\n    endIndex,\n    auxiliaryArray,\n    animations,\n) {\n    let k = startIndex;\n    let i = startIndex;\n    let j = middleIndex + 1;\n\n    while (i <= middleIndex && j <= endIndex) {\n        animations.push([i,j]);\n        animations.push([i,j]);\n\n        if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n            animations.push([k, auxiliaryArray[i]]);\n            mainArray[k++] = auxiliaryArray[i++];\n        } else {\n            animations.push([k, auxiliaryArray[j]]);\n            mainArray[k++] = auxiliaryArray[j++];\n        }\n    }\n\n    while (i <= middleIndex) {\n        animations.push([i,i]);\n        animations.push([i,i]);\n        animations.push([k, auxiliaryArray[i]])\n        mainArray[k++] = auxiliaryArray[i++];\n    }\n\n    while (j <= endIndex) {\n        animations.push([j,j]);\n        animations.push([j,j]);\n        animations.push([k, auxiliaryArray[j]])\n        mainArray[k++] = auxiliaryArray[j++];\n    }\n\n\n}\n\n\nexport function getBubbleSortAnimations(array) {\n    const animations = [];\n    let n = array.length;\n    for (let i = 0; i < n - 1; i++) {\n        for (let j = 0; j < n-i-1; j++) {\n            if (array[j] > array[j+1]) {\n                animations.push([j,j+1]);\n                animations.push([j,j+1]);\n                let temp = array[j];\n                animations.push([j, array[j+1], j+1, temp]);\n                array[j] = array[j+1];\n                array[j+1] = temp;\n            } else {\n                animations.push([j,j+1]);\n                animations.push([j,j+1]);\n                animations.push([j, array[j], j+1, array[j+1]]);\n            }\n        }\n    }\n    return animations;\n}","import './SortingVisualizer.css';\nimport React from 'react';\nimport {getMergeSortAnimations, getBubbleSortAnimations} from '../SortingAlgorithms/SortingAlgorithms';\n\n\nconst ANIMATION_SPEED = 3;\n\nconst NUMBER_OF_BARS = 210;\n\nconst MAIN_COLOR = 'firebrick';\n\nconst COMPARE_COLOR = 'lightblue';\n\n\nexport default class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n\n    componentDidMount() {\n        this.resetArray();\n    }\n\n    resetArray() {\n        const array = [];\n        for (let i = 0; i < NUMBER_OF_BARS; i++) {\n            array.push(randomIntFromInterval(5,720));\n        }\n        this.setState({array});\n    }\n\n    mergeSort() {\n        const animations = getMergeSortAnimations(this.state.array);\n\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName(\"array-bar\");\n            const isColorChange = i % 3 !== 2;\n            if(isColorChange) {\n                const [barOneIndex, barTwoIndex] = animations[i];\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                const color = i % 3 === 0 ? COMPARE_COLOR : MAIN_COLOR;\n\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, i * ANIMATION_SPEED);\n            } else {\n                setTimeout(() => {\n                    const [barOneIndex, newHeight] = animations[i];\n                    const barOneStyle = arrayBars[barOneIndex];\n                    barOneStyle.style.height = `${newHeight}px`;\n                }, i * ANIMATION_SPEED);\n            }\n        }\n    }\n\n    bubbleSort() {\n        const animations = getBubbleSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName(\"array-bar\");\n            const isColorChange = i % 3 !== 2;\n            if(isColorChange) {\n                const [barOneIndex, barTwoIndex] = animations[i];\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                const color = i % 3 === 0 ? COMPARE_COLOR : MAIN_COLOR;\n\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, i * ANIMATION_SPEED/20);\n            } else {\n                setTimeout(() => {\n                    const [barOneIndex, barOneNewHeight, barTwoIndex, barTwoNewHeight] = animations[i];\n                    const barOneStyle = arrayBars[barOneIndex];\n                    const barTwoStyle = arrayBars[barTwoIndex];\n                    barOneStyle.style.height = `${barOneNewHeight}px`;\n                    barTwoStyle.style.height = `${barTwoNewHeight}px`;\n                }, i * ANIMATION_SPEED/30);\n            }\n        }\n\n    }\n\n    quickSort() {\n        \n    }\n\n    render() {\n        const {array} = this.state;\n\n        return (\n            <div className=\"array-container\">\n                {array.map((value, idx) => (\n                    <div \n\n                        className=\"array-bar\" \n                        key={idx} \n                        style={{\n                            backgroundColor: MAIN_COLOR,\n                            height: `${value}px`,\n                        }}>\n                    \n                    </div>\n                ))}\n\n                <div className=\"button-container\">\n                    <button onClick={() => this.resetArray()}>Generate!</button>\n                    <button onClick={() => this.mergeSort()}>Merge Sort!</button>\n                    <button onClick={() => this.bubbleSort()}>Bubble Sort!</button>\n                    <button onClick={() => this.quickSort()}>Quick Sort!</button>\n                </div>\n            \n            </div>\n        );\n    }\n}\n\nfunction randomIntFromInterval (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}